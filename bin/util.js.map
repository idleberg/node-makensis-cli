{"version":3,"sources":["../src/util.js"],"names":["makensis","compile","filePath","options","then","json","jsonString","output","console","log","stdout","catch","error","status","stderr","hdrinfo","hdrInfo","jsonFlags","version","cmdhelp","title","cmdHelp","input","key","obj","startsWith","substr","JSON","stringify","lines","split","filteredLines","filter","line","lastLine","pop","prefix","lineData","substring","length","symbols","table","tableSizes","tableSymbols","forEach","pair","replace","push","objSizes","symbol","isInteger","parseInt","config","columns","alignment","minWidth","x"],"mappings":"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","file":"util.js","sourcesContent":["import * as makensis from 'makensis';\n\nconst compile = (filePath, options = null) => {\n  options || (options = {});\n\n  makensis.compile(filePath, options)\n  .then(output => {\n    if (options.json === true) {\n      jsonString(output);\n    } else {\n      console.log(output.stdout);\n    }\n  }).catch(output => {\n    if (options.json === true) {\n      jsonString(output);\n    } else {\n      console.error(`Exit Code ${output.status}\\n${output.stderr}`);\n    }\n  });\n};\n\nconst hdrinfo = (options = null) => {\n  options || (options = {});\n\n  makensis.hdrInfo()\n  .then(output => {\n    // due to an error in makensis, this code should never run\n    if (options.json === true) {\n      jsonFlags(output.stdout);\n    } else {\n      console.log(output.stdout);\n    }\n  }).catch(output => {\n    if (options.json === true) {\n      jsonFlags(output.stdout);\n    } else {\n      console.log(output.stdout);\n    }\n  });\n};\n\nconst version = (options = null) => {\n  options || (options = {});\n\n  makensis.version(options)\n  .then(output => {\n    if (options.json === true) {\n      jsonString(output.stdout, 'version');\n    } else {\n      console.log(output.stdout);\n    }\n  }).catch(output => {\n    if (options.json === true) {\n      jsonString(output.stderr, 'error');\n    } else {\n      console.error(output.stderr);\n    }\n  });\n};\n\nconst cmdhelp = (title = '', options = null) => {\n  options || (options = {});\n\n  makensis.cmdHelp(title, options)\n  .then(output => {\n    // due to an error in makensis, this code should never run\n    return;\n  }).catch(output => {\n    if (options.json === true) {\n      jsonString(output.stderr, 'help');\n    } else {\n      console.error(output.stderr);\n    }\n  });\n};\n\nconst jsonString = (input, key = null) => {\n  let obj = {};\n\n  if (key === 'version' && input.startsWith('v')) {\n    input = input.substr(1);\n  }\n  if (key === null) {\n    obj = input;\n  } else {\n    obj[key] = input;\n  }\n\n  let json = JSON.stringify(obj, null, '  ');\n\n  console.log(json);\n};\n\nconst jsonFlags = (input) => {\n  let lines = input.split('\\n');\n\n  let filteredLines = lines.filter((line) => {\n    if (line !== '') {\n      return line;\n    }\n  });\n\n  let lastLine = filteredLines.pop();\n  // console.log(lines);\n  // console.log(lastLine);\n\n  const prefix = 'Defined symbols: ';\n\n  let lineData = lastLine.substring(prefix.length);\n  let symbols = lineData.split(',');\n  // console.log(symbols);\n\n  let table = [];\n  let tableSizes = [];\n  let tableSymbols = [];\n\n  // Split sizes\n  filteredLines.forEach((line) => {\n    let pair = line.split(' is ');\n    pair[0] = pair[0].replace('Size of ', '');\n    pair[0] = pair[0].replace(' ', '_');\n    pair[1] = pair[1].substring(-1, pair[1].length - 1);\n\n    let obj = {};\n    obj[pair[0]] = pair[1];\n    tableSizes.push(pair);\n  });\n\n  let objSizes = {};\n  objSizes['sizes'] = tableSizes;\n  table.push(objSizes);\n\n  // Split symbols\n  symbols.forEach((symbol) => {\n    let pair = symbol.split('=');\n    let obj = {};\n\n    if (pair.length > 1) {\n      if (isInteger(pair[1]) === true) {\n        pair[1] = parseInt(pair[1], 10);\n      }\n\n      obj[pair[0]] = pair[1];\n    } else {\n      obj[symbol] = true;\n    }\n\n    tableSymbols.push(obj);\n  });\n\n  let obj = {};\n  obj['defined_symbols'] = tableSymbols;\n  table.push(obj);\n\n  const config = {\n    columns: {\n      0: {\n        alignment: 'center',\n        minWidth: 10\n      },\n      1: {\n        alignment: 'center',\n        minWidth: 10\n      }\n    }\n  };\n\n  const json = JSON.stringify(table, null, '  ');\n  console.log(json);\n};\n\nconst isInteger = (x) => {\n  return x % 2 === 0;\n};\n\nexport {\n  cmdhelp,\n  compile,\n  hdrinfo,\n  version\n};\n"]}